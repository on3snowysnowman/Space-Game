import random
import os
from time import sleep


#Classes

class ship:

    def __init__(self, health, name, fighterDmg, bomberDmg, interceptorDmg, freighterDmg):


        self.health = health
        self.name = name
        self.fighterDmg = fighterDmg
        self.bomberDmg = bomberDmg
        self.interceptorDmg = interceptorDmg
        self.freighterDmg = freighterDmg
#Ships

fighter = ship(10, "Fighter", 10, 10, 10, 10)

bomber = ship(30, "Bombers", 0, 0, 0, 50)

interceptor = ship(30, "Interceptor", 20, 40, 10, 10)

freighter = ship(500, "Freighter", 50, 20, 40, 50)

#Enemy Ship Lists

enemyFighters = [fighter, fighter, fighter, fighter, fighter, fighter, fighter, fighter, fighter, fighter]

enemyBombers = [bomber, bomber, bomber, bomber, bomber, bomber, bomber, bomber, bomber, bomber]

enemyInterceptors = []

enemyFreighters = []

#Enemy Ship Health Lists
enemyFightersHealth = []

enemyBombersHealth = []

enemyInterceptorsHealth = []

enemyFreightersHealth = []

#Player Ship Lists

playerFighters = [fighter, fighter, fighter, fighter, fighter, fighter, fighter, fighter, fighter, fighter]

playerBombers = [bomber, bomber, bomber]

playerInterceptors = [interceptor, interceptor, interceptor, interceptor, interceptor, interceptor, interceptor, interceptor, interceptor, interceptor,]

playerFreighters = [freighter]

#Player Ship Health Lists

playerFightersHealth = []

playerBombersHealth = []

playerInterceptorsHealth = []

playerFreightersHealth = []




def clearScreen():

    os.system('cls' if os.name == 'nt' else 'clear')


def pause():

    os.system('pause')


def healthCount():

    for i in range(0, len(playerFighters)):

        playerFightersHealth.append(fighter.health)

    for i in range(0, len(playerBombers)):

        playerBombersHealth.append(bomber.health)

    for i in range(0, len(playerInterceptors)):

        playerInterceptorsHealth.append(interceptor.health)

    for i in range(0, len(playerFreighters)):

        playerFreightersHealth.append(freighter.health)

    for i in range(0, len(enemyFighters)):

        enemyFightersHealth.append(fighter.health)

    for i in range(0, len(enemyBombers)):

        enemyBombersHealth.append(bomber.health)

    for i in range(0, len(enemyInterceptors)):

        enemyInterceptorsHealth.append(interceptor.health)

    for i in range(0, len(enemyFreighters)):

        enenmyFreightersHealth.append(freighter.health)



def healthClear():

    global enemyFightersHealth, playerFightersHealth

    print(enemyFightersHealth)
    enemyFightersHealth = [x for x in enemyFightersHealth if x > 0]
    print(enemyFightersHealth)
    print(playerFightersHealth)
    playerFightersHealth = [x for x in playerFightersHealth if x > 0]
    print(playerFightersHealth)

    


def battle():

    healthCount()
    print(enemyFightersHealth)
    
    global playerFighters, enemyFighters, ship, playerFightersHealth, playerBombersHealth, playerInterceptorsHealth, playerFreightersHealth

    while True:
        print("Fleet \n\nFighters: {}\nBombers: {}\nInterceptors: {}\nFreighters: {}".format(len(playerFighters), len(playerBombers), len(playerInterceptors), len(playerFreighters)))
        print("\n" * 1)
        print("Enemy Fleet \n\nFighters: {}\nBombers: {}\nInterceptors: {}\nFreighters: {}".format(len(enemyFighters), len(enemyBombers), len(enemyInterceptors), len(enemyFreighters)))
        print("\n" * 1)


        #Player chooses a ship to attack
        playerAttack = str.lower(input("Choose a ship to attack: "))
                            
        if playerAttack in ["fighter", "fighters"]:

            shipChoice = str.lower(input("What ships will you deploy? "))

            #Player chooses ships to deploy

            #Fighter against Fighter
            if shipChoice in ["fighter", "fighters"]:

                try:
                      
                    for i in range(0, len(enemyFightersHealth)):

                        ranNum = random.uniform(0.5, 1.6)
                        enemyFightersHealth[i] -= int(playerFighters[i].fighterDmg * ranNum)

                        ranNum = random.uniform(0.5, 1.6)
                        playerFightersHealth[i] -= int(enemyFighters[i].fighterDmg * ranNum)
                      

                except Exception:

                    for i in range(0, len(enemyFightersHealth) - len(playerFightersHealth)):

                        ranNum = random.uniform(0.5, 1.6)
                        enemyFightersHealth[i + len(enemyFightersHealth) - 1] -= int(playerFighters[i].fighterDmg * ranNum)

                        ranNum = random.uniform(0.5, 1.6)
                        playerFightersHealth[i + len(playerFightersHealth) - 1] -= int(enemyFightersp[i].fighterDmg * ranNum) 

                        break

                healthClear()
                        

            #Bomber against Fighter
            elif shipChoice in ["bomber", "bombers"]:

                print("You can't attack Fighters with Bombers!")
                continue

            #Interceptor against Fighter
            elif shipChoice in ["interceptor", "interceptors"]:

                pass

            #Freighter against Fighter
            elif shipChoice in ["freighter", "freighters"]:
                
                print("You can't use a Freighter on offense!")
            

        elif playerAttack in ["bomber", "bombers"]:

             shipChoice = str.lower(input("What ships will you deploy? "))

             if shipChoice in ["fighter", "fighters"]:

                 pass


        elif playerAttack in ["interceptor", "interceptors"]:

            print("There are no Interceptors in the enemy fleet!")


        elif playerAttack in ["freighter", "freighters"]:

            print("There are no Freighters in the enemy fleet!")


        else:

            clearScreen()
            sleep(.5)
            print("Please enter a valid ship name")
            pause()
            clearScreen()
            sleep(.5)
            continue

        break


battle()
